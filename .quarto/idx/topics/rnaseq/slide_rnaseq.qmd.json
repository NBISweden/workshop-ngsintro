{"title":"RNASeq Workflow","markdown":{"yaml":{"title":"RNASeq Workflow","description":"Analysis of bulk RNA-Seq data to determine genome-wide gene expression","author":"Roy Francis / Dag Ahrén","format":"revealjs"},"headingText":"Setup","headingAttr":{"id":"","classes":[],"keyvalue":[["visibility","hidden"]]},"containsRefs":true,"markdown":"\n\n\n```{r,include=FALSE}\n# load packages\nlibrary(yaml)\nlibrary(here)\nupid <- yaml::read_yaml(here(\"_quarto.yml\"))$uppmax_project\n#library(dplyr)\n#library(pheatmap)\n#library(plotly)\n#library(DESeq2)\n```\n\n## What is RNA?\n\n![](assets/rnaseq_transcription.svg){height=\"100%\" width=\"70%\"}\n\n- The transcriptome is spatially and temporally dynamic\n- Data comes from functional units (coding regions)\n- Only a tiny fraction of the genome\n\n::: {.notes}\n\n- Central dogma of molecular biology. DNA -> RNA -> Protein.\n- We have gene models to describe the organisation of a genome into functional units.\n- Very tiny portion of the genome is transcribed into RNA.\n- There are many types of RNA. Commonly protein coding RNA, also called mRNA. There are tRNA, sRNA, miRNA, siRNA, lincRNA, piRNA, snRNA etc.\n- What is the most abundant RNA? rRNA.\n- While DNA is mostly considered constant in all cells for an organism, expressed RNA varies from cell to cell and from time to time.\n- When we say RNA sequencing, we are not sequencing RNA molecules directly. RNA is first converted to DNA through reverse transcription followed by regular DNA sequencing.\n\n:::\n\n## Applications\n\n- Identify gene sequences in genomes (annotation)\n- Learn about gene function\n- Differential gene expression\n- Explore isoform and allelic expression\n- Understand co-expression, pathways and networks\n- Gene fusion\n- RNA editing\n\n## Workflow\n\n![](assets/rnaseq_workflow.svg){width=\"55%\"}\n\n<img src=\"assets/sequence.jpg\" style=\"height:280px; position:fixed; right:0px; bottom:0px; margin-right: 100px; margin-bottom: 130px; border-radius:4px;\">\n\n@conesa2016survey\n\n::: {.notes}\n\n## De-Novo assembly\n\n- When no reference genome available\n- To identify novel genes/transcripts/isoforms\n- Identify fusion genes\n- Assemble transcriptome from short reads\n- Access quality of assembly and refine\n- Map reads back to assembled transcriptome\n\n::: {.small}\n[Trinity](https://github.com/trinityrnaseq/trinityrnaseq/wiki), [SOAPdenovo-Trans](http://soap.genomics.org.cn/SOAPdenovo-Trans.html), [Oases](https://www.ebi.ac.uk/~zerbino/oases/), [rnaSPAdes](http://cab.spbu.ru/software/rnaspades/), @hsieh2019effect, @wang2017comprehensive\n:::\n\n:::\n\n## Experimental design\n\n:::: {.columns}\n::: {.column}\n- Biological replicates: 6 - 12 @schurch2016many\n- Sample size estimation @hart2013calculating\n- Power analysis [@zhao2018rnaseqsamplesize RNASeqPower web app](https://rshiny.nbis.se/shiny-server-apps/shiny-rnaseq-power/)\n- Balanced design to avoid batch effects [DeclareDesign](https://declaredesign.org/)\n- RIN values have strong effect @gallego2014rna\n:::\n\n::: {.column}\n![](assets/batch-effect.svg){width=\"80%\"}\n:::\n::::\n\n::: {.notes}\n\n- Technical replicates are not necessary @marioni2008rna\n- Previous publications can be useful in experimental planning to avoid repeating the same mistakes\n\n:::\n\n## Library & Sequencing\n\n:::: {.columns}\n::: {.column}\n![](assets/rnaseq_library_prep.svg){width=\"90%\"}\n:::\n::: {.column}\n![](assets/rnaseq_read_type.svg)  \n\n- polyA selection/Ribosomal RNA depletion\n- single-end/Paired-end\n\n:::\n::::\n\n::: {.notes}\n\n## Library prep\n\n- 80% of the RNA in a cell is ribosomal RNA (rRNA)\n- rRNA can be eliminated using polyA selection or rRNA depletion \n- PolyA selection mostly captures only protein-coding genes / mRNA but gives cleaner results\n- Depletion of rRNA is the solution if it's important to retain all RNA species\n- smallRNAs are purified through size selection\n- PCR amplification may be needed for low quantity input (See section PCR duplicates)\n- Preferably opt for stranded (directional) libraries @zhao2015comparison, @levin2010comprehensive\n  - Accurately identify sense/antisense transcript\n  - Resolve overlapping genes\n- Exome capture\n- Library normalisation to concentrate specific transcripts\n- Libraries should have high complexity/low duplication. @daley2013predicting\n\n:::\n\n## Sequencing\n\n- Short reads vs long reads (Illumina/PacBio)\n- Read length @chhangawala2015impact\n  - Greater than 50bp does not improve DGE\n  - Longer reads better for isoforms\n- Pooling samples\n- Sequencing depth (Coverage/Reads per sample)\n- Single-end reads (Cheaper)\n- Paired-end reads\n  - Increased mappable reads\n  - Increased power in assemblies\n  - Better for structural variation and isoforms\n  - Decreased false-positives for DGE\n- More replicates are better than more depth @liu2014rna\n\n@corley2017differentially, [SciLifeLab](https://ngisweden.scilifelab.se/file/1540-1_Comparison_of_PE_and_SE_for_RNA-seq.pdf)\n\n## Workflow • DGE\n\n![](assets/rnaseq_workflow_dge.svg){height=\"100%\" width=\"70%\"}\n\n## Read QC\n\n- Number of reads\n- Per base sequence quality\n- Per sequence quality score\n- Per base sequence content\n- Per sequence GC content\n- Per base N content\n- Sequence length distribution\n- Sequence duplication levels\n- Overrepresented sequences\n- Adapter content\n- Kmer content\n\n<img src=\"assets/qc.jpg\" style=\"height:250px; position:fixed; right:0px; bottom: 0px; margin-right: 100px; margin-bottom: 310px;\">\n\n[FastQC](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/), [MultiQC](http://multiqc.info/)\n\nhttps://sequencing.qcfail.com/\n\n![](assets/qcfail.jpg){width=\"90%\"}\n\n## FastQC\n\n:::: {.columns}\n::: {.column}\n\nGood quality  \n\n[![](assets/fastqc_good.png)](http://www.bioinformatics.babraham.ac.uk/projects/fastqc/good_sequence_short_fastqc.html){width=\"50%\"}\n\n:::\n::: {.column}\n\nPoor quality  \n\n[![](assets/fastqc_bad.png)](http://www.bioinformatics.babraham.ac.uk/projects/fastqc/bad_sequence_fastqc.html){width=\"50%\"}\n\n:::\n::::\n\n## Read QC • PBSQ, PSQS\n\n**Per base sequence quality**  \n![](assets/pbsq.jpg){width=\"60%\"}\n\n**Per sequence quality scores**  \n![](assets/psqs.jpg){width=\"60%\"}\n\n::: {.notes}\n\n## Read QC • PBSC, PSGC\n\n**Per base sequence content**  \n![](assets/pbsc.jpg){width=\"60%\"}\n\n**Per sequence GC content**  \n![](assets/psgc.jpg){width=\"60%\"}\n\n## Read QC • SDL, AC\n\n**Sequence duplication level**  \n![](assets/sdl.jpg){width=\"60%\"}\n\n**Adapter content**  \n![](assets/ac.jpg){width=\"60%\"}\n\n:::\n\n## Trimming\n\n:::: {.columns}\n::: {.column}\n\n- Trimming reads to remove adapter/readthrough or low quality bases\n- Related options are hard clipping, filtering reads\n- Sliding window trimming\n- Filter by min/max read length\n  - Remove reads less than ~18nt\n- Demultiplexing/Splitting\n\n**When to avoid trimming?**\n\n- Read trimming may not always be necessary @liao2020read\n- Fixed read length may sometimes be more important\n- Expected insert size distribution may be more important for assemblers\n\n[Cutadapt](https://github.com/marcelm/cutadapt/), [fastp](https://github.com/OpenGene/fastp), [Prinseq](http://prinseq.sourceforge.net/)\n\n:::\n::: {.column}\n\n![](assets/rnaseq_read_through.svg){width=\"65%\"}\n\n:::\n::::\n\n## Mapping\n\n![](assets/rnaseq_mapping.svg){height=\"100%\" width=\"70%\"}\n\n- Aligning reads back to a reference sequence\n- Mapping to genome vs transcriptome\n- Splice-aware alignment (genome) (STAR, HISAT2 etc)\n\n[STAR](https://github.com/alexdobin/STAR), [HiSat2](https://ccb.jhu.edu/software/hisat2/index.shtml), @baruzzo2017simulation\n\n## Aligners • Metrics\n\n:::: {.columns}\n::: {.column width=\"40%\"}\n\n![](assets/compare-aligners-speed.png){width=\"90%\"}\n\n:::\n::: {.column width=\"60%\"}\n\n![](assets/compare-aligners-quality.jpg)\n\n![](assets/accuracy.svg){width=\"50%\"}\n\n:::\n::::\n\n@baruzzo2017simulation\n\n::: {.notes}\n\n## Aligners time and RAM\n\n|Program|Time_Min|Memory_GB|\n|-------|--------|---------|\n|HISATx1|22.7|4.3|\n|HISATx2|47.7|4.3|\n|HISAT|26.7|4.3|\n|STAR|25|28|\n|STARx2|50.5|28|\n|GSNAP|291.9|20.2|\n|TopHat2|1170|4.3|\n\n:::\n\n## Mapping\n\n- Reads (FASTQ)\n\n```\n@ST-E00274:179:HHYMLALXX:8:1101:1641:1309 1:N:0:NGATGT\nNCATCGTGGTATTTGCACATCTTTTCTTATCAAATAAAAAGTTTAACCTACTCAGTTATGCGCATACGTTTTTTGATGGCATTTCCATAAACCGATTTTTTTTTTATGCACGTACCCAAAACGTGCAGAAAAATACGCTGCTAGAAATGTA\n+\n#AAAFAFA<-AFFJJJAFA-FFJJJJFFFAJJJJ-<FFJJJ-A-F-7--FA7F7-----FFFJFA<FFFFJ<AJ--FF-A<A-<JJ-7-7-<FF-FFFJAFFAA--A--7FJ-7----77-A--7F7)---7F-A----7)7-----7<<-\n```\n\n`@instrument:runid:flowcellid:lane:tile:xpos:ypos read:isfiltered:controlnumber:sampleid`\n\n- Reference Genome/Transcriptome (FASTA)\n\n```\n>1 dna:chromosome chromosome:GRCz10:1:1:58871917:1 REF\nGATCTTAAACATTTATTCCCCCTGCAAACATTTTCAATCATTACATTGTCATTTCCCCTC\nCAAATTAAATTTAGCCAGAGGCGCACAACATACGACCTCTAAAAAAGGTGCTGTAACATG\n```\n\n- Annotation (GTF/GFF)\n\n```\n#!genome-build GRCz10\n#!genebuild-last-updated 2016-11\n4       ensembl_havana  gene    6732    52059   .       -       .       gene_id \"ENSDARG00000104632\"; gene_version \"2\"; gene_name \"rerg\"; gene_source \"ensembl_havana\"; gene_biotype \"protein_coding\"; havana_gene \"OTTDARG00000044080\"; havana_gene_version \"1\";\n```\n\n`seq source feature start end score strand frame attribute`\n\n[Illumina FASTQ format](https://emea.support.illumina.com/bulletins/2016/04/fastq-files-explained.html), [GTF format](https://www.ensembl.org/info/website/upload/gff.html)\n\n## Alignment\n\n- SAM/BAM (Sequence Alignment Map format)\n\n```\nST-E00274:188:H3JWNCCXY:4:1102:32431:49900      163     1       1       60      8S139M4S      =       385     535     TATTTAGAGATCTTAAACATCCATTCCCCCTGCAAACATTTTCAATCATTACATTGTCATTTTCCCTCCAAATTAAATTTAGCCAGAGGCGCACAACATACGACCTCTAAAAAAGGTGCTGGAACATGTACCTATATGCAGCACCACCATC     AAAFAFFAFFFFJ7FFFFJ<JAFA7F-<AJ7JJ<FFFJ--<FAJF<7<7FAFJ-<AFA<-JJJ-AF-AJ-FF<F--A<FF<-7777-7JA-77A---F-7AAFF-FJA--77FJ<--77)))7<JJA<J77<-------<7--))7)))7-    NM:i:4   MD:Z:12T0T40C58T25      AS:i:119        XS:i:102        XA:Z:17,-53287490,4S33M4D114M,11;     MQ:i:60 MC:Z:151M       RG:Z:ST-E00274_188_H3JWNCCXY_4\n```\n\n`query flag ref pos mapq cigar mrnm mpos tlen seq qual opt`\n\n**Never store alignment files in raw SAM format. Always compress it!** [SAM format](http://www.htslib.org/doc/sam.html)\n\n|Format|Size_GB|\n|------|-------|\n|SAM|7.4|\n|BAM|1.9|\n|CRAM lossless Q|1.4|\n|CRAM 8 bins Q|0.8|\n|CRAM no Q|0.26|\n\n## Visualisation • IGV\n\n![](assets/igv.png)\n\n[IGV](http://software.broadinstitute.org/software/igv/), [UCSC Genome Browser](https://genome.ucsc.edu/), [SeqMonk](https://www.bioinformatics.babraham.ac.uk/projects/seqmonk/)\n\n## Visualisation • `tview`\n\n`samtools tview alignment.bam genome.fasta`\n\n![](assets/tview.png)\n\n## Visualisation • SeqMonk\n\n![](assets/seqmonk.jpg)\n\n[SeqMonk](https://www.bioinformatics.babraham.ac.uk/projects/seqmonk/)\n\n## Alignment QC\n\n- Number of reads mapped/unmapped/paired etc\n- Uniquely mapped\n- Insert size distribution\n- Coverage\n- Gene body coverage\n- Biotype counts / Chromosome counts\n- Counts by region: gene/intron/non-genic\n- Sequencing saturation\n- Strand specificity\n\nSTAR (final log file), samtools stats, bamtools stats, [QoRTs](https://hartleys.github.io/QoRTs/), [RSeQC](http://rseqc.sourceforge.net/), [Qualimap](http://qualimap.bioinfo.cipf.es/)\n\n## Alignment QC • STAR Log\n\nMultiQC can be used to summarise and plot STAR log files.\n\n![](assets/star_alignment_plot.svg){width=\"95%\"}\n\n## Alignment QC • Features\n\nQoRTs was run on all samples and summarised using MultiQC.\n\n![](assets/qorts_alignments.svg){width=\"95%\"}\n\n## Alignment QC • QoRTs\n\n![](assets/qorts.png){width=\"95%\"}\n\n## Alignment QC • Examples\n\n:::: {.columns}\n::: {.column}\n\n**Read mapping profile**\n![](assets/clipping_good.png)\n\n:::\n::: {.column}\n\n**Gene body coverage**\n![](assets/gene-body-coverage.png)  \n@sigurgeirsson2014sequencing\n\n:::\n::::\n\n::: {.notes}\n\nThe read mapping profile shows how well bases along a read mapped to the reference for all reads. Mapability usually decreases towards the 5' and 3' ends due to soft-clipping. This is is more pronounced in untrimmed reads.\n\nGene body coverage shows read coverage over the gene for all genes. An even coverage is ideally expected. A bias in either direction could be indicative of library quality. A bias toward the 3' end is usually seen in polyA selected libraries.\n\n:::\n\n## Alignment QC • Examples\n\n:::: {.columns}\n::: {.column}\n\n**Insert size**  \n![](assets/inner_distance.png)\n\n:::\n::: {.column}\n\n**Saturation curve**  \n![](assets/saturation.jpg){width=\"70%\"}\n\n@francis2013comparison\n\n:::\n::::\n\n::: {.notes}\n\nNegative insert size implies overlapping mate pairs.\n\nConserved genes in the mouse transcriptome. Saturation curves of discovery of genes in the mouse heart from a set of a subset of 248 conserved orthologs; genes which have any blast hit are shown in circles; genes which the translated protein was within the expected size range of the conserved gene are in squares; proteins which are 100% identical to a canonical protein in Uniprot/Swissprot mouse database are shown in triangles.\n\n:::\n\n## Quantification • Counts\n\n:::: {.columns}\n::: {.column}\n\n- Read counts = gene expression\n- Reads can be quantified on any feature (gene, transcript, exon etc)\n- Intersection on [gene models](#intro)\n- Gene/Transcript level\n\n![](assets/rnaseq_counts.svg)\n\n[featureCounts](http://bioinf.wehi.edu.au/featureCounts/), [HTSeq](https://github.com/simon-anders/htseq)\n\n:::\n::: {.column}\n\n![](assets/rnaseq_union.svg){width=\"60%\"}\n\n:::\n::::\n\n## Quantification\n\n:::: {.columns}\n::: {.column}\n\n**PCR duplicates**\n\n- Computational deduplication not recommended @klepikova2017effect, @parekh2016impact\n- Use PCR-free library-prep kits\n- Use UMIs during library-prep @fu2018elimination\n\n**Multi-mapping**\n\n- Added (BEDTools multicov)\n- Discard (featureCounts, HTSeq)\n- Distribute counts (Cufflinks, featureCounts)\n- Rescue\n  - Probabilistic assignment (Rcount, Cufflinks)\n  - Prioritise features (Rcount)\n  - Probabilistic assignment with EM (RSEM)\n\n:::\n::: {.column}\n\n![](assets/pcr-duplicates.png)\n\n:::\n::::\n\n::: {.notes}\n\nTools that detect duplicate reads (like Picard MarkDuplicates) is looking for reads that start and end at the same coordinates. Such reads are expected to be PCR derived and can be collapsed down to 1 read. This makes sense in whole genome sequencing, but in RNA-Seq, this is naturally expected since highly expressed genes create huge number of identical transcripts which may fragment at hotspots leading to fragmentation bias @roberts2011improving. Therefore, removing PCR duplicates may remove real duplicates as well.\n\n:::\n\n## Quantification • Abundance\n\n- Count methods\n  - Provide no inference on isoforms\n  - Cannot accurately measure fold change\n  \n<!--.size-60[![](assets/rnaseq_count_issues.svg)]-->\n\n- Probabilistic assignment\n  - Deconvolute ambiguous mappings\n  - Transcript-level\n  - cDNA reference\n\n**Kallisto, Salmon**\n\n- Ultra-fast & alignment-free\n- Bootstrapping & quantification confidence\n- Transcript-level counts\n- Transcript-level estimates improves gene-level estimates @soneson2015differential, [tximport](https://bioconductor.org/packages/release/bioc/html/tximport.html)\n- Evaluation and comparison of isoform quantification tools @zhang2017evaluation\n\n[RSEM](https://deweylab.github.io/RSEM/), [Kallisto](https://pachterlab.github.io/kallisto/), [Salmon](https://combine-lab.github.io/salmon/)\n\n::: {.notes}\n\nGene expression counts may be literal counts (reads overlapping to gene models) or probabilistically estimated based on the data. Proponents of probabilistically estimation claims that it is a better estimate that corrects for sampling biases.\n\nTools such as RSEM, Kallisto and Salmon produce probabilistic abundance estimates. @soneson2015differential claims that estimating abundance using Kallisto at the transcript levels and then summarising down to gene-level counts results in improved estimates of gene expression.\n\nKallisto/Salmon -> transcript-counts -> [`tximport()`](https://bioconductor.org/packages/release/bioc/html/tximport.html) -> gene-counts\n\n:::\n\n## Quantification QC\n\n```\nENSG00000000003    140   242   188   143   287   344   438   280   253\nENSG00000000005    0     0     0     0     0     0     0     0     0\nENSG00000000419    69    98    77    55    52    94    116   79    69\nENSG00000000457    56    75    104   79    157   205   183   178   153\nENSG00000000460    33    27    23    19    27    42    69    44    40\n```\n\n:::: {.columns}\n::: {.column}\n\n- Pairwise correlation between samples must be high (>0.9)\n\n![](assets/correlation.png){width=\"50%\"}\n\n:::\n::: {.column}\n\n- Count QC using RNASeqComp\n\n![](assets/rnaseqcomp.gif){width=\"60%\"}\n\n[RNASeqComp](https://bioconductor.org/packages/release/bioc/html/rnaseqcomp.html), @teng2016benchmark\n\n:::\n::::\n\n## MultiQC\n\n[![](assets/multiqc.png)](https://multiqc.info/examples/rna-seq/multiqc_report.html)\n\n## Normalisation\n\n- Control for Sequencing depth, compositional bias and more\n- Median of Ratios (DESeq2) and TMM (edgeR) perform the best\n\n![](assets/normalisation.png)\n\n- For DGE using DGE packages, use raw counts\n- For clustering, heatmaps etc use VST, VOOM or RLOG\n- For own analysis, plots etc, use TPM\n- Other solutions: spike-ins/house-keeping genes\n\n<img src=\"assets/distribution.jpg\" style=\"height:280px; position:fixed; right:0px; bottom: 0px; margin-right: 70px; margin-bottom: 140px;\">\n\n@dillies2013comprehensive, @evans2018selecting, @wagner2012measurement\n\n## Exploratory\n\n```{r,echo=FALSE,eval=FALSE}\n# read vst data\ncvst <- readRDS(\"assets/counts-filtered-vst.Rds\")\nmf <- readRDS(\"assets/metadata-filtered.Rds\")\n```\n\n:::: {.columns}\n::: {.column width=\"60%\"}\n\n- Remove lowly expressed genes\n- Heatmaps, MDS, PCA etc.\n\n```{r,echo=FALSE,fig.height=4.9,fig.width=6.8,dev=\"svg\",eval=FALSE}\ntemp <- as.matrix(dist(t(cvst)))\n\ndf_annot <- mf[,c(\"patient\"),drop=FALSE]\ncol_patient <- c(\"#A6CEE3\",\"#1F78B4\",\"#B2DF8A\",\"#33A02C\",\"#FB9A99\",\n                 \"#E31A1C\",\"#FDBF6F\",\"#FF7F00\")\nann_col_patient <- col_patient\nnames(ann_col_patient) <- levels(factor(df_annot$patient))\n\np <- pheatmap::pheatmap(temp,border_color=NA,annotation_col=df_annot,\n         annotation_row=df_annot,annotation_legend=T,\n         annotation_colors=list(patient=ann_col_patient),\n         fontsize_row=7,fontsize_col=7)\nggsave(\"assets/dge-clustering.png\",p,height=5,width=7)\n```\n\n![](assets/dge-clustering.png)\n\n[pheatmap](https://github.com/raivokolde/pheatmap)\n\n:::\n::: {.column width=\"40%\"}\n\n- Transform raw counts to VST, VOOM, RLOG, TPM etc\n\n```{r,echo=FALSE,eval=FALSE}\n# MDS\nmat1 <- as.data.frame(cmdscale(dist(t(cvst),method=\"euclidean\"),eig=F,k=3))\nmat1$nid <- row.names(mat1)\nmat1 <- merge(mat1,mf,by=\"nid\")\n```\n\n```{r,echo=FALSE,eval=FALSE}\n# static plot\np <- ggplot(mat1,aes(V1,V2,group=patient,colour=patient))+\n  geom_point()+\n  stat_ellipse()+\n  scale_colour_manual(values=ann_col_patient)+\n  guides(colour=guide_legend(nrow=3))+\n  labs(x=\"MDS1\",y=\"MDS2\")+\n  theme_bw()+\n  theme(panel.border=element_blank(),\n        legend.position=\"top\")\nggsave(\"assets/dge-mds.png\",p,height=5.5,width=5)\n```\n\n```{r,echo=FALSE,eval=FALSE}\n# interactive plot\nmat1$tt <- paste0(\"<b>ID: </b>\",mat1$id,\"\\n\",\n                   \"<b>NGS ID: </b>\",mat1$nid)\np1 <- plot_ly(mat1,x=~V1,y=~V2,z=~V3,text=~tt,hoverinfo=\"text\",\n        colors=col_patient,width=750,height=500)\nadd_markers(p1,color=~patient)\n```\n\n![](assets/dge-mds.png)\n\n:::\n::::\n\n## Batch correction\n\n- Estimate variation explained by variables ([PVCA](https://bioconductor.org/packages/release/bioc/html/pvca.html))\n\n![](assets/pvca.png){width=\"60%\"}\n\n- Find confounding effects as surrogate variables ([SVA](http://bioconductor.org/packages/release/bioc/html/sva.html))\n- Model known batches in the LM/GLM model\n- Correct known batches (ComBat from SVA)(Only if you are desperate! @zindler2020simulating)\n- Interactively evaluate batch effects and correction ([BatchQC](http://bioconductor.org/packages/release/bioc/html/BatchQC.html)) @manimaran2016batchqc \n\n## Differential expression\n\n![](assets/dge.png){width=\"90%\"}\n\n- Univariate testing gene-by-gene\n- More descriptive, less predictive\n\n::: {.notes}\n\n## Differential expression\n\n- DESeq2, edgeR (Neg-binom > GLM > Test)\n- Limma-Voom (Neg-binom > Voom-transform > LM > Test)\n- DESeq2 `~age+condition`\n  - Estimate size factors `estimateSizeFactors()`\n  - Estimate gene-wise dispersion `estimateDispersions()`\n  - Fit curve to gene-wise dispersion estimates\n  - Shrink gene-wise dispersion estimates\n  - GLM fit for each gene\n  - Wald test `nbinomWaldTest()`\n\n```{r,echo=FALSE,fig.height=3.9,fig.width=3.9,eval=FALSE}\ncf <- read.delim(\"assets/counts-filtered.txt\",header=T,stringsAsFactors=F)\nmf <- readRDS(\"assets/metadata-filtered.Rds\")\n\n# filtering\nbads <- c(\"P8304_123\",\"P8304_124\",\"P8304_125\",\"P8304_126\",\"P8304_127\",\"P8304_128\")\ncf <- cf %>% dplyr::select(-one_of(bads))\nmf <- dplyr::filter(mf,!(nid %in% bads)) %>% droplevels()\nmf$type <- factor(c(rep(c(\"type1\",\"type1\",\"type2\",\"type2\"),each=4),\n             rep(\"type2\",each=3),rep(\"control\",each=4)))\n```\n\n```{r,echo=FALSE,fig.height=2.9,fig.width=2.9,eval=FALSE}\n{plot(x=log10(rowMeans(as.matrix(cf))+1),y=log10(rowVars(as.matrix(cf))+1),xlab=bquote(~-log[10]~Mean),ylab=bquote(~-log[10]~Variance),pch=20,cex=0.4)\nabline(a=0,b=1,col=\"red\")}\n```\n\n```{r,echo=FALSE,fig.height=2.5,fig.width=5,dev=\"svg\",eval=FALSE}\nd <- DESeqDataSetFromMatrix(countData=cf,colData=mf,design=as.formula(~type))\nd <- DESeq2::estimateSizeFactors(d,type=\"ratio\")\nd <- DESeq2::estimateDispersions(d)\n\n{par(mar=c(4,4,0.2,0.5))\npar(mfrow=c(1,2))\nplotDispEsts(d)\nplotDispEsts(d,xlim=c(600,700),ylim=c(0.05,1.2),cex=1)}\npar(mfrow=c(1,1))\n```\n\n![](assets/dge-dispersion.png){width=\"50%\"}\n\n[DESeq2](https://bioconductor.org/packages/release/bioc/html/DESeq2.html), [edgeR](https://bioconductor.org/packages/release/bioc/html/edgeR.html), [limma](https://bioconductor.org/packages/release/bioc/html/limma.html), @seyednasrollah2015comparison\n\n:::\n\n## DGE\n\n- Results `results()`\n\n```{r,echo=FALSE,eval=FALSE}\nd1 <- nbinomWaldTest(d)\nd1r1 <- results(d1)\nhead(d1r1,n=1)\n```\n\n```\nlog2 fold change (MLE): type type2 vs control\nWald test p-value: type type2 vs control\nDataFrame with 1 row and 6 columns\n                        baseMean     log2FoldChange             lfcSE\n                       <numeric>          <numeric>         <numeric>\nENSG00000000003 242.307796723287 -0.932926089608546 0.114285150312285\n                             stat               pvalue                 padj\n                        <numeric>            <numeric>            <numeric>\nENSG00000000003 -8.16314356729037 3.26416150242775e-16 1.36240609998527e-14\n```\n\n\n- Summary `summary()`\n\n```{r,echo=FALSE,eval=FALSE}\nsummary(d1r1)\n```\n\n```\nout of 17889 with nonzero total read count\nadjusted p-value < 0.1\nLFC > 0 (up)       : 4526, 25%\nLFC < 0 (down)     : 5062, 28%\noutliers [1]       : 25, 0.14%\nlow counts [2]     : 0, 0%\n(mean count < 3)\n```\n\n## DGE\n\n:::: {.columns}\n::: {.column}\n\n- MA plot `plotMA()`\n\n```{r,echo=FALSE,fig.height=2.5,fig.width=3,dev=\"svg\",eval=FALSE}\n{par(mar=c(4,4,0.2,0.2))\nplotMA(d1)}\n```\n\n![](assets/dge-ma.png)\n\n- Volcano plot\n\n```{r,echo=FALSE,fig.height=2.5,fig.width=3,dev=\"svg\",eval=FALSE}\npar(mar=c(4,4,0.2,0.2))\ntopT <- as.data.frame(d1r1)\n\n#Adjusted P values (FDR Q values)\nwith(topT, plot(log2FoldChange, -log10(padj), pch=20, cex=1.0, xlab=bquote(~Log[2]~fold~change), ylab=bquote(~-Log[10]~Q~value)))\n\nwith(subset(topT, padj<0.05 & abs(log2FoldChange)>2), points(log2FoldChange, -log10(padj), pch=20, col=\"red\", cex=0.5))\n\n#Add lines for absolute FC>2 and P-value cut-off at FDR Q<0.05\nabline(v=0, col=\"black\", lty=3, lwd=1.0)\nabline(v=-2, col=\"black\", lty=3, lwd=1.0)\nabline(v=2, col=\"black\", lty=3, lwd=1.0)\nabline(h=-log10(max(topT$pvalue[topT$padj<0.05], na.rm=TRUE)), col=\"black\", lty=3, lwd=1.0)\n```\n\n![](assets/dge-volcano.png)\n\n:::\n::: {.column}\n\n- Normalised counts `plotCounts()`\n\n```{r,echo=FALSE,fig.height=3,fig.width=3,dev=\"svg\",eval=FALSE}\npar(mar=c(4.5,4.5,1,0.2))\nplotCounts(d1,\"ENSG00000000003\",intgroup=\"type\")\n```\n\n![](assets/dge-counts.png)\n\n![](assets/scattered.gif){width=\"55%\"}\n\n:::\n::::\n\n## Functional analysis • GO\n\n- Gene set analysis (GSA)\n- Gene set enrichment analysis (GSEA)\n- Gene ontology / Reactome databases\n\n![](assets/go.jpg){width=\"50%\"}\n\n<img src=\"assets/systembio.png\" style=\"height:250px; position:fixed; right:0px; bottom:0px; margin-right: 70px; margin-bottom: 380px;\">\n\n## Functional analysis • Kegg\n\n- Pathway analysis (Kegg)\n\n![](assets/kegg.png){width=\"80%\"}\n\n[DAVID](https://david.ncifcrf.gov/), [clusterProfiler](https://bioconductor.org/packages/release/bioc/html/clusterProfiler.html), [ClueGO](http://apps.cytoscape.org/apps/cluego), [ErmineJ](https://erminej.msl.ubc.ca/), [pathview](https://bioconductor.org/packages/release/bioc/html/pathview.html)\n\n## Summary\n\n- Sound experimental design to avoid confounding\n- Plan carefully about lib prep, sequencing etc based on experimental objective\n- For DGE, biological replicates may be more important than other considerations (paired-end, sequencing depth, long reads etc)\n- Discard low quality bases, reads, genes and samples\n- Verify that tools and methods align with data assumptions\n- Experiment with multiple pipelines and tools\n- QC! QC everything at every step\n\n> [Conesa, A., Madrigal, P., Tarazona, S., Gomez-Cabrero, D., Cervera, A., McPherson, A., ... & Mortazavi, A. (2016). A survey of best practices for RNA-seq data analysis. [Genome biology, 17(1), 1-19.](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-016-0881-8)]{.large}  \n\n## Further learning\n\n- Griffith lab [RNA-Seq using HiSat & StringTie tutorial](https://github.com/griffithlab/rnaseq_tutorial/wiki)\n- HBC Training [DGE using DeSeq2 tutorial](https://github.com/hbctraining/Intro-to-R-with-DGE)\n- Hemberg lab [scRNA-Seq tutorial](http://hemberg-lab.github.io/scRNA.seq.course/index.html)\n- [RNA-Seq Blog](https://www.rna-seqblog.com/)\n- SciLifeLab [courses](https://www.scilifelab.se/education/courses%26training)\n\n<img src=\"assets/help.png\" style=\"height:250px; position:fixed; right:0px; bottom:0px; margin-right: 35px; margin-bottom: 40px;\">\n\n## {background-image=\"assets/end.jpg\"}\n### Thank you. Questions?\n\n## References\n\n::: {#refs}\n:::\n\n## Hands-On tutorial\n\n**Main exercise**\n\n- 01 Check the quality of the raw reads with **FastQC**\n- 02 Map the reads to the reference genome using **HISAT2**\n- 03 Assess the post-alignment quality using **QualiMap**\n- 04 Count the reads overlapping with genes using **featureCounts**\n- 05 Find differentially expressed genes using **DESeq2** in R\n\n**Bonus exercises**\n\n- 01 Functional annotation of DE genes using **GO/Reactome/Kegg** databases\n- 02 RNA-Seq figures and plots using **R**\n- 03 Visualisation of RNA-seq BAM files using **IGV** genome browser\n\n[**Data:** `/sw/courses/ngsintro/rnaseq/`]{.large}  \n[**Work:** ``r paste0(\"/proj/\",upid,\"/nobackup/user/rnaseq/\")``]{.large}\n\n## Hands-On tutorial\n\n:::: {.columns}\n::: {.column width=\"40%\"}\n\n- Course data directory\n\n`/sw/courses/ngsintro/rnaseq/`\n\n```\nrnaseq/\n+-- bonus/\n|   +-- assembly/\n|   +-- exon/\n|   +-- funannot/\n|   +-- plots/\n+-- documents/\n+-- main/\n    +-- 1_raw/\n    +-- 2_fastqc/\n    +-- 3_mapping/\n    +-- 4_qualimap/\n    +-- 5_dge/\n    +-- 6_multiqc/\n    +-- reference/\n    |   +-- mouse_chr19_hisat2/\n    +-- scripts/\n```\n\n:::\n::: {.column width=\"60%\"}\n\n- Your work directory\n\n``r paste0(\"/proj/\",upid,\"/nobackup/user/rnaseq/\")``\n\n```\n[user]/\nrnaseq/\n  +-- 1_raw/\n  +-- 2_fastqc/\n  +-- 3_mapping/\n  +-- 4_qualimap/\n  +-- 5_dge/\n  +-- 6_multiqc/\n  +-- reference/\n  |   +-- mouse_chr19_hisat2/\n  +-- scripts/\n  +-- funannot/\n  +-- plots/\n```\n\n:::\n::::\n\n","srcMarkdownNoYaml":"\n\n## Setup {visibility=\"hidden\"}\n\n```{r,include=FALSE}\n# load packages\nlibrary(yaml)\nlibrary(here)\nupid <- yaml::read_yaml(here(\"_quarto.yml\"))$uppmax_project\n#library(dplyr)\n#library(pheatmap)\n#library(plotly)\n#library(DESeq2)\n```\n\n## What is RNA?\n\n![](assets/rnaseq_transcription.svg){height=\"100%\" width=\"70%\"}\n\n- The transcriptome is spatially and temporally dynamic\n- Data comes from functional units (coding regions)\n- Only a tiny fraction of the genome\n\n::: {.notes}\n\n- Central dogma of molecular biology. DNA -> RNA -> Protein.\n- We have gene models to describe the organisation of a genome into functional units.\n- Very tiny portion of the genome is transcribed into RNA.\n- There are many types of RNA. Commonly protein coding RNA, also called mRNA. There are tRNA, sRNA, miRNA, siRNA, lincRNA, piRNA, snRNA etc.\n- What is the most abundant RNA? rRNA.\n- While DNA is mostly considered constant in all cells for an organism, expressed RNA varies from cell to cell and from time to time.\n- When we say RNA sequencing, we are not sequencing RNA molecules directly. RNA is first converted to DNA through reverse transcription followed by regular DNA sequencing.\n\n:::\n\n## Applications\n\n- Identify gene sequences in genomes (annotation)\n- Learn about gene function\n- Differential gene expression\n- Explore isoform and allelic expression\n- Understand co-expression, pathways and networks\n- Gene fusion\n- RNA editing\n\n## Workflow\n\n![](assets/rnaseq_workflow.svg){width=\"55%\"}\n\n<img src=\"assets/sequence.jpg\" style=\"height:280px; position:fixed; right:0px; bottom:0px; margin-right: 100px; margin-bottom: 130px; border-radius:4px;\">\n\n@conesa2016survey\n\n::: {.notes}\n\n## De-Novo assembly\n\n- When no reference genome available\n- To identify novel genes/transcripts/isoforms\n- Identify fusion genes\n- Assemble transcriptome from short reads\n- Access quality of assembly and refine\n- Map reads back to assembled transcriptome\n\n::: {.small}\n[Trinity](https://github.com/trinityrnaseq/trinityrnaseq/wiki), [SOAPdenovo-Trans](http://soap.genomics.org.cn/SOAPdenovo-Trans.html), [Oases](https://www.ebi.ac.uk/~zerbino/oases/), [rnaSPAdes](http://cab.spbu.ru/software/rnaspades/), @hsieh2019effect, @wang2017comprehensive\n:::\n\n:::\n\n## Experimental design\n\n:::: {.columns}\n::: {.column}\n- Biological replicates: 6 - 12 @schurch2016many\n- Sample size estimation @hart2013calculating\n- Power analysis [@zhao2018rnaseqsamplesize RNASeqPower web app](https://rshiny.nbis.se/shiny-server-apps/shiny-rnaseq-power/)\n- Balanced design to avoid batch effects [DeclareDesign](https://declaredesign.org/)\n- RIN values have strong effect @gallego2014rna\n:::\n\n::: {.column}\n![](assets/batch-effect.svg){width=\"80%\"}\n:::\n::::\n\n::: {.notes}\n\n- Technical replicates are not necessary @marioni2008rna\n- Previous publications can be useful in experimental planning to avoid repeating the same mistakes\n\n:::\n\n## Library & Sequencing\n\n:::: {.columns}\n::: {.column}\n![](assets/rnaseq_library_prep.svg){width=\"90%\"}\n:::\n::: {.column}\n![](assets/rnaseq_read_type.svg)  \n\n- polyA selection/Ribosomal RNA depletion\n- single-end/Paired-end\n\n:::\n::::\n\n::: {.notes}\n\n## Library prep\n\n- 80% of the RNA in a cell is ribosomal RNA (rRNA)\n- rRNA can be eliminated using polyA selection or rRNA depletion \n- PolyA selection mostly captures only protein-coding genes / mRNA but gives cleaner results\n- Depletion of rRNA is the solution if it's important to retain all RNA species\n- smallRNAs are purified through size selection\n- PCR amplification may be needed for low quantity input (See section PCR duplicates)\n- Preferably opt for stranded (directional) libraries @zhao2015comparison, @levin2010comprehensive\n  - Accurately identify sense/antisense transcript\n  - Resolve overlapping genes\n- Exome capture\n- Library normalisation to concentrate specific transcripts\n- Libraries should have high complexity/low duplication. @daley2013predicting\n\n:::\n\n## Sequencing\n\n- Short reads vs long reads (Illumina/PacBio)\n- Read length @chhangawala2015impact\n  - Greater than 50bp does not improve DGE\n  - Longer reads better for isoforms\n- Pooling samples\n- Sequencing depth (Coverage/Reads per sample)\n- Single-end reads (Cheaper)\n- Paired-end reads\n  - Increased mappable reads\n  - Increased power in assemblies\n  - Better for structural variation and isoforms\n  - Decreased false-positives for DGE\n- More replicates are better than more depth @liu2014rna\n\n@corley2017differentially, [SciLifeLab](https://ngisweden.scilifelab.se/file/1540-1_Comparison_of_PE_and_SE_for_RNA-seq.pdf)\n\n## Workflow • DGE\n\n![](assets/rnaseq_workflow_dge.svg){height=\"100%\" width=\"70%\"}\n\n## Read QC\n\n- Number of reads\n- Per base sequence quality\n- Per sequence quality score\n- Per base sequence content\n- Per sequence GC content\n- Per base N content\n- Sequence length distribution\n- Sequence duplication levels\n- Overrepresented sequences\n- Adapter content\n- Kmer content\n\n<img src=\"assets/qc.jpg\" style=\"height:250px; position:fixed; right:0px; bottom: 0px; margin-right: 100px; margin-bottom: 310px;\">\n\n[FastQC](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/), [MultiQC](http://multiqc.info/)\n\nhttps://sequencing.qcfail.com/\n\n![](assets/qcfail.jpg){width=\"90%\"}\n\n## FastQC\n\n:::: {.columns}\n::: {.column}\n\nGood quality  \n\n[![](assets/fastqc_good.png)](http://www.bioinformatics.babraham.ac.uk/projects/fastqc/good_sequence_short_fastqc.html){width=\"50%\"}\n\n:::\n::: {.column}\n\nPoor quality  \n\n[![](assets/fastqc_bad.png)](http://www.bioinformatics.babraham.ac.uk/projects/fastqc/bad_sequence_fastqc.html){width=\"50%\"}\n\n:::\n::::\n\n## Read QC • PBSQ, PSQS\n\n**Per base sequence quality**  \n![](assets/pbsq.jpg){width=\"60%\"}\n\n**Per sequence quality scores**  \n![](assets/psqs.jpg){width=\"60%\"}\n\n::: {.notes}\n\n## Read QC • PBSC, PSGC\n\n**Per base sequence content**  \n![](assets/pbsc.jpg){width=\"60%\"}\n\n**Per sequence GC content**  \n![](assets/psgc.jpg){width=\"60%\"}\n\n## Read QC • SDL, AC\n\n**Sequence duplication level**  \n![](assets/sdl.jpg){width=\"60%\"}\n\n**Adapter content**  \n![](assets/ac.jpg){width=\"60%\"}\n\n:::\n\n## Trimming\n\n:::: {.columns}\n::: {.column}\n\n- Trimming reads to remove adapter/readthrough or low quality bases\n- Related options are hard clipping, filtering reads\n- Sliding window trimming\n- Filter by min/max read length\n  - Remove reads less than ~18nt\n- Demultiplexing/Splitting\n\n**When to avoid trimming?**\n\n- Read trimming may not always be necessary @liao2020read\n- Fixed read length may sometimes be more important\n- Expected insert size distribution may be more important for assemblers\n\n[Cutadapt](https://github.com/marcelm/cutadapt/), [fastp](https://github.com/OpenGene/fastp), [Prinseq](http://prinseq.sourceforge.net/)\n\n:::\n::: {.column}\n\n![](assets/rnaseq_read_through.svg){width=\"65%\"}\n\n:::\n::::\n\n## Mapping\n\n![](assets/rnaseq_mapping.svg){height=\"100%\" width=\"70%\"}\n\n- Aligning reads back to a reference sequence\n- Mapping to genome vs transcriptome\n- Splice-aware alignment (genome) (STAR, HISAT2 etc)\n\n[STAR](https://github.com/alexdobin/STAR), [HiSat2](https://ccb.jhu.edu/software/hisat2/index.shtml), @baruzzo2017simulation\n\n## Aligners • Metrics\n\n:::: {.columns}\n::: {.column width=\"40%\"}\n\n![](assets/compare-aligners-speed.png){width=\"90%\"}\n\n:::\n::: {.column width=\"60%\"}\n\n![](assets/compare-aligners-quality.jpg)\n\n![](assets/accuracy.svg){width=\"50%\"}\n\n:::\n::::\n\n@baruzzo2017simulation\n\n::: {.notes}\n\n## Aligners time and RAM\n\n|Program|Time_Min|Memory_GB|\n|-------|--------|---------|\n|HISATx1|22.7|4.3|\n|HISATx2|47.7|4.3|\n|HISAT|26.7|4.3|\n|STAR|25|28|\n|STARx2|50.5|28|\n|GSNAP|291.9|20.2|\n|TopHat2|1170|4.3|\n\n:::\n\n## Mapping\n\n- Reads (FASTQ)\n\n```\n@ST-E00274:179:HHYMLALXX:8:1101:1641:1309 1:N:0:NGATGT\nNCATCGTGGTATTTGCACATCTTTTCTTATCAAATAAAAAGTTTAACCTACTCAGTTATGCGCATACGTTTTTTGATGGCATTTCCATAAACCGATTTTTTTTTTATGCACGTACCCAAAACGTGCAGAAAAATACGCTGCTAGAAATGTA\n+\n#AAAFAFA<-AFFJJJAFA-FFJJJJFFFAJJJJ-<FFJJJ-A-F-7--FA7F7-----FFFJFA<FFFFJ<AJ--FF-A<A-<JJ-7-7-<FF-FFFJAFFAA--A--7FJ-7----77-A--7F7)---7F-A----7)7-----7<<-\n```\n\n`@instrument:runid:flowcellid:lane:tile:xpos:ypos read:isfiltered:controlnumber:sampleid`\n\n- Reference Genome/Transcriptome (FASTA)\n\n```\n>1 dna:chromosome chromosome:GRCz10:1:1:58871917:1 REF\nGATCTTAAACATTTATTCCCCCTGCAAACATTTTCAATCATTACATTGTCATTTCCCCTC\nCAAATTAAATTTAGCCAGAGGCGCACAACATACGACCTCTAAAAAAGGTGCTGTAACATG\n```\n\n- Annotation (GTF/GFF)\n\n```\n#!genome-build GRCz10\n#!genebuild-last-updated 2016-11\n4       ensembl_havana  gene    6732    52059   .       -       .       gene_id \"ENSDARG00000104632\"; gene_version \"2\"; gene_name \"rerg\"; gene_source \"ensembl_havana\"; gene_biotype \"protein_coding\"; havana_gene \"OTTDARG00000044080\"; havana_gene_version \"1\";\n```\n\n`seq source feature start end score strand frame attribute`\n\n[Illumina FASTQ format](https://emea.support.illumina.com/bulletins/2016/04/fastq-files-explained.html), [GTF format](https://www.ensembl.org/info/website/upload/gff.html)\n\n## Alignment\n\n- SAM/BAM (Sequence Alignment Map format)\n\n```\nST-E00274:188:H3JWNCCXY:4:1102:32431:49900      163     1       1       60      8S139M4S      =       385     535     TATTTAGAGATCTTAAACATCCATTCCCCCTGCAAACATTTTCAATCATTACATTGTCATTTTCCCTCCAAATTAAATTTAGCCAGAGGCGCACAACATACGACCTCTAAAAAAGGTGCTGGAACATGTACCTATATGCAGCACCACCATC     AAAFAFFAFFFFJ7FFFFJ<JAFA7F-<AJ7JJ<FFFJ--<FAJF<7<7FAFJ-<AFA<-JJJ-AF-AJ-FF<F--A<FF<-7777-7JA-77A---F-7AAFF-FJA--77FJ<--77)))7<JJA<J77<-------<7--))7)))7-    NM:i:4   MD:Z:12T0T40C58T25      AS:i:119        XS:i:102        XA:Z:17,-53287490,4S33M4D114M,11;     MQ:i:60 MC:Z:151M       RG:Z:ST-E00274_188_H3JWNCCXY_4\n```\n\n`query flag ref pos mapq cigar mrnm mpos tlen seq qual opt`\n\n**Never store alignment files in raw SAM format. Always compress it!** [SAM format](http://www.htslib.org/doc/sam.html)\n\n|Format|Size_GB|\n|------|-------|\n|SAM|7.4|\n|BAM|1.9|\n|CRAM lossless Q|1.4|\n|CRAM 8 bins Q|0.8|\n|CRAM no Q|0.26|\n\n## Visualisation • IGV\n\n![](assets/igv.png)\n\n[IGV](http://software.broadinstitute.org/software/igv/), [UCSC Genome Browser](https://genome.ucsc.edu/), [SeqMonk](https://www.bioinformatics.babraham.ac.uk/projects/seqmonk/)\n\n## Visualisation • `tview`\n\n`samtools tview alignment.bam genome.fasta`\n\n![](assets/tview.png)\n\n## Visualisation • SeqMonk\n\n![](assets/seqmonk.jpg)\n\n[SeqMonk](https://www.bioinformatics.babraham.ac.uk/projects/seqmonk/)\n\n## Alignment QC\n\n- Number of reads mapped/unmapped/paired etc\n- Uniquely mapped\n- Insert size distribution\n- Coverage\n- Gene body coverage\n- Biotype counts / Chromosome counts\n- Counts by region: gene/intron/non-genic\n- Sequencing saturation\n- Strand specificity\n\nSTAR (final log file), samtools stats, bamtools stats, [QoRTs](https://hartleys.github.io/QoRTs/), [RSeQC](http://rseqc.sourceforge.net/), [Qualimap](http://qualimap.bioinfo.cipf.es/)\n\n## Alignment QC • STAR Log\n\nMultiQC can be used to summarise and plot STAR log files.\n\n![](assets/star_alignment_plot.svg){width=\"95%\"}\n\n## Alignment QC • Features\n\nQoRTs was run on all samples and summarised using MultiQC.\n\n![](assets/qorts_alignments.svg){width=\"95%\"}\n\n## Alignment QC • QoRTs\n\n![](assets/qorts.png){width=\"95%\"}\n\n## Alignment QC • Examples\n\n:::: {.columns}\n::: {.column}\n\n**Read mapping profile**\n![](assets/clipping_good.png)\n\n:::\n::: {.column}\n\n**Gene body coverage**\n![](assets/gene-body-coverage.png)  \n@sigurgeirsson2014sequencing\n\n:::\n::::\n\n::: {.notes}\n\nThe read mapping profile shows how well bases along a read mapped to the reference for all reads. Mapability usually decreases towards the 5' and 3' ends due to soft-clipping. This is is more pronounced in untrimmed reads.\n\nGene body coverage shows read coverage over the gene for all genes. An even coverage is ideally expected. A bias in either direction could be indicative of library quality. A bias toward the 3' end is usually seen in polyA selected libraries.\n\n:::\n\n## Alignment QC • Examples\n\n:::: {.columns}\n::: {.column}\n\n**Insert size**  \n![](assets/inner_distance.png)\n\n:::\n::: {.column}\n\n**Saturation curve**  \n![](assets/saturation.jpg){width=\"70%\"}\n\n@francis2013comparison\n\n:::\n::::\n\n::: {.notes}\n\nNegative insert size implies overlapping mate pairs.\n\nConserved genes in the mouse transcriptome. Saturation curves of discovery of genes in the mouse heart from a set of a subset of 248 conserved orthologs; genes which have any blast hit are shown in circles; genes which the translated protein was within the expected size range of the conserved gene are in squares; proteins which are 100% identical to a canonical protein in Uniprot/Swissprot mouse database are shown in triangles.\n\n:::\n\n## Quantification • Counts\n\n:::: {.columns}\n::: {.column}\n\n- Read counts = gene expression\n- Reads can be quantified on any feature (gene, transcript, exon etc)\n- Intersection on [gene models](#intro)\n- Gene/Transcript level\n\n![](assets/rnaseq_counts.svg)\n\n[featureCounts](http://bioinf.wehi.edu.au/featureCounts/), [HTSeq](https://github.com/simon-anders/htseq)\n\n:::\n::: {.column}\n\n![](assets/rnaseq_union.svg){width=\"60%\"}\n\n:::\n::::\n\n## Quantification\n\n:::: {.columns}\n::: {.column}\n\n**PCR duplicates**\n\n- Computational deduplication not recommended @klepikova2017effect, @parekh2016impact\n- Use PCR-free library-prep kits\n- Use UMIs during library-prep @fu2018elimination\n\n**Multi-mapping**\n\n- Added (BEDTools multicov)\n- Discard (featureCounts, HTSeq)\n- Distribute counts (Cufflinks, featureCounts)\n- Rescue\n  - Probabilistic assignment (Rcount, Cufflinks)\n  - Prioritise features (Rcount)\n  - Probabilistic assignment with EM (RSEM)\n\n:::\n::: {.column}\n\n![](assets/pcr-duplicates.png)\n\n:::\n::::\n\n::: {.notes}\n\nTools that detect duplicate reads (like Picard MarkDuplicates) is looking for reads that start and end at the same coordinates. Such reads are expected to be PCR derived and can be collapsed down to 1 read. This makes sense in whole genome sequencing, but in RNA-Seq, this is naturally expected since highly expressed genes create huge number of identical transcripts which may fragment at hotspots leading to fragmentation bias @roberts2011improving. Therefore, removing PCR duplicates may remove real duplicates as well.\n\n:::\n\n## Quantification • Abundance\n\n- Count methods\n  - Provide no inference on isoforms\n  - Cannot accurately measure fold change\n  \n<!--.size-60[![](assets/rnaseq_count_issues.svg)]-->\n\n- Probabilistic assignment\n  - Deconvolute ambiguous mappings\n  - Transcript-level\n  - cDNA reference\n\n**Kallisto, Salmon**\n\n- Ultra-fast & alignment-free\n- Bootstrapping & quantification confidence\n- Transcript-level counts\n- Transcript-level estimates improves gene-level estimates @soneson2015differential, [tximport](https://bioconductor.org/packages/release/bioc/html/tximport.html)\n- Evaluation and comparison of isoform quantification tools @zhang2017evaluation\n\n[RSEM](https://deweylab.github.io/RSEM/), [Kallisto](https://pachterlab.github.io/kallisto/), [Salmon](https://combine-lab.github.io/salmon/)\n\n::: {.notes}\n\nGene expression counts may be literal counts (reads overlapping to gene models) or probabilistically estimated based on the data. Proponents of probabilistically estimation claims that it is a better estimate that corrects for sampling biases.\n\nTools such as RSEM, Kallisto and Salmon produce probabilistic abundance estimates. @soneson2015differential claims that estimating abundance using Kallisto at the transcript levels and then summarising down to gene-level counts results in improved estimates of gene expression.\n\nKallisto/Salmon -> transcript-counts -> [`tximport()`](https://bioconductor.org/packages/release/bioc/html/tximport.html) -> gene-counts\n\n:::\n\n## Quantification QC\n\n```\nENSG00000000003    140   242   188   143   287   344   438   280   253\nENSG00000000005    0     0     0     0     0     0     0     0     0\nENSG00000000419    69    98    77    55    52    94    116   79    69\nENSG00000000457    56    75    104   79    157   205   183   178   153\nENSG00000000460    33    27    23    19    27    42    69    44    40\n```\n\n:::: {.columns}\n::: {.column}\n\n- Pairwise correlation between samples must be high (>0.9)\n\n![](assets/correlation.png){width=\"50%\"}\n\n:::\n::: {.column}\n\n- Count QC using RNASeqComp\n\n![](assets/rnaseqcomp.gif){width=\"60%\"}\n\n[RNASeqComp](https://bioconductor.org/packages/release/bioc/html/rnaseqcomp.html), @teng2016benchmark\n\n:::\n::::\n\n## MultiQC\n\n[![](assets/multiqc.png)](https://multiqc.info/examples/rna-seq/multiqc_report.html)\n\n## Normalisation\n\n- Control for Sequencing depth, compositional bias and more\n- Median of Ratios (DESeq2) and TMM (edgeR) perform the best\n\n![](assets/normalisation.png)\n\n- For DGE using DGE packages, use raw counts\n- For clustering, heatmaps etc use VST, VOOM or RLOG\n- For own analysis, plots etc, use TPM\n- Other solutions: spike-ins/house-keeping genes\n\n<img src=\"assets/distribution.jpg\" style=\"height:280px; position:fixed; right:0px; bottom: 0px; margin-right: 70px; margin-bottom: 140px;\">\n\n@dillies2013comprehensive, @evans2018selecting, @wagner2012measurement\n\n## Exploratory\n\n```{r,echo=FALSE,eval=FALSE}\n# read vst data\ncvst <- readRDS(\"assets/counts-filtered-vst.Rds\")\nmf <- readRDS(\"assets/metadata-filtered.Rds\")\n```\n\n:::: {.columns}\n::: {.column width=\"60%\"}\n\n- Remove lowly expressed genes\n- Heatmaps, MDS, PCA etc.\n\n```{r,echo=FALSE,fig.height=4.9,fig.width=6.8,dev=\"svg\",eval=FALSE}\ntemp <- as.matrix(dist(t(cvst)))\n\ndf_annot <- mf[,c(\"patient\"),drop=FALSE]\ncol_patient <- c(\"#A6CEE3\",\"#1F78B4\",\"#B2DF8A\",\"#33A02C\",\"#FB9A99\",\n                 \"#E31A1C\",\"#FDBF6F\",\"#FF7F00\")\nann_col_patient <- col_patient\nnames(ann_col_patient) <- levels(factor(df_annot$patient))\n\np <- pheatmap::pheatmap(temp,border_color=NA,annotation_col=df_annot,\n         annotation_row=df_annot,annotation_legend=T,\n         annotation_colors=list(patient=ann_col_patient),\n         fontsize_row=7,fontsize_col=7)\nggsave(\"assets/dge-clustering.png\",p,height=5,width=7)\n```\n\n![](assets/dge-clustering.png)\n\n[pheatmap](https://github.com/raivokolde/pheatmap)\n\n:::\n::: {.column width=\"40%\"}\n\n- Transform raw counts to VST, VOOM, RLOG, TPM etc\n\n```{r,echo=FALSE,eval=FALSE}\n# MDS\nmat1 <- as.data.frame(cmdscale(dist(t(cvst),method=\"euclidean\"),eig=F,k=3))\nmat1$nid <- row.names(mat1)\nmat1 <- merge(mat1,mf,by=\"nid\")\n```\n\n```{r,echo=FALSE,eval=FALSE}\n# static plot\np <- ggplot(mat1,aes(V1,V2,group=patient,colour=patient))+\n  geom_point()+\n  stat_ellipse()+\n  scale_colour_manual(values=ann_col_patient)+\n  guides(colour=guide_legend(nrow=3))+\n  labs(x=\"MDS1\",y=\"MDS2\")+\n  theme_bw()+\n  theme(panel.border=element_blank(),\n        legend.position=\"top\")\nggsave(\"assets/dge-mds.png\",p,height=5.5,width=5)\n```\n\n```{r,echo=FALSE,eval=FALSE}\n# interactive plot\nmat1$tt <- paste0(\"<b>ID: </b>\",mat1$id,\"\\n\",\n                   \"<b>NGS ID: </b>\",mat1$nid)\np1 <- plot_ly(mat1,x=~V1,y=~V2,z=~V3,text=~tt,hoverinfo=\"text\",\n        colors=col_patient,width=750,height=500)\nadd_markers(p1,color=~patient)\n```\n\n![](assets/dge-mds.png)\n\n:::\n::::\n\n## Batch correction\n\n- Estimate variation explained by variables ([PVCA](https://bioconductor.org/packages/release/bioc/html/pvca.html))\n\n![](assets/pvca.png){width=\"60%\"}\n\n- Find confounding effects as surrogate variables ([SVA](http://bioconductor.org/packages/release/bioc/html/sva.html))\n- Model known batches in the LM/GLM model\n- Correct known batches (ComBat from SVA)(Only if you are desperate! @zindler2020simulating)\n- Interactively evaluate batch effects and correction ([BatchQC](http://bioconductor.org/packages/release/bioc/html/BatchQC.html)) @manimaran2016batchqc \n\n## Differential expression\n\n![](assets/dge.png){width=\"90%\"}\n\n- Univariate testing gene-by-gene\n- More descriptive, less predictive\n\n::: {.notes}\n\n## Differential expression\n\n- DESeq2, edgeR (Neg-binom > GLM > Test)\n- Limma-Voom (Neg-binom > Voom-transform > LM > Test)\n- DESeq2 `~age+condition`\n  - Estimate size factors `estimateSizeFactors()`\n  - Estimate gene-wise dispersion `estimateDispersions()`\n  - Fit curve to gene-wise dispersion estimates\n  - Shrink gene-wise dispersion estimates\n  - GLM fit for each gene\n  - Wald test `nbinomWaldTest()`\n\n```{r,echo=FALSE,fig.height=3.9,fig.width=3.9,eval=FALSE}\ncf <- read.delim(\"assets/counts-filtered.txt\",header=T,stringsAsFactors=F)\nmf <- readRDS(\"assets/metadata-filtered.Rds\")\n\n# filtering\nbads <- c(\"P8304_123\",\"P8304_124\",\"P8304_125\",\"P8304_126\",\"P8304_127\",\"P8304_128\")\ncf <- cf %>% dplyr::select(-one_of(bads))\nmf <- dplyr::filter(mf,!(nid %in% bads)) %>% droplevels()\nmf$type <- factor(c(rep(c(\"type1\",\"type1\",\"type2\",\"type2\"),each=4),\n             rep(\"type2\",each=3),rep(\"control\",each=4)))\n```\n\n```{r,echo=FALSE,fig.height=2.9,fig.width=2.9,eval=FALSE}\n{plot(x=log10(rowMeans(as.matrix(cf))+1),y=log10(rowVars(as.matrix(cf))+1),xlab=bquote(~-log[10]~Mean),ylab=bquote(~-log[10]~Variance),pch=20,cex=0.4)\nabline(a=0,b=1,col=\"red\")}\n```\n\n```{r,echo=FALSE,fig.height=2.5,fig.width=5,dev=\"svg\",eval=FALSE}\nd <- DESeqDataSetFromMatrix(countData=cf,colData=mf,design=as.formula(~type))\nd <- DESeq2::estimateSizeFactors(d,type=\"ratio\")\nd <- DESeq2::estimateDispersions(d)\n\n{par(mar=c(4,4,0.2,0.5))\npar(mfrow=c(1,2))\nplotDispEsts(d)\nplotDispEsts(d,xlim=c(600,700),ylim=c(0.05,1.2),cex=1)}\npar(mfrow=c(1,1))\n```\n\n![](assets/dge-dispersion.png){width=\"50%\"}\n\n[DESeq2](https://bioconductor.org/packages/release/bioc/html/DESeq2.html), [edgeR](https://bioconductor.org/packages/release/bioc/html/edgeR.html), [limma](https://bioconductor.org/packages/release/bioc/html/limma.html), @seyednasrollah2015comparison\n\n:::\n\n## DGE\n\n- Results `results()`\n\n```{r,echo=FALSE,eval=FALSE}\nd1 <- nbinomWaldTest(d)\nd1r1 <- results(d1)\nhead(d1r1,n=1)\n```\n\n```\nlog2 fold change (MLE): type type2 vs control\nWald test p-value: type type2 vs control\nDataFrame with 1 row and 6 columns\n                        baseMean     log2FoldChange             lfcSE\n                       <numeric>          <numeric>         <numeric>\nENSG00000000003 242.307796723287 -0.932926089608546 0.114285150312285\n                             stat               pvalue                 padj\n                        <numeric>            <numeric>            <numeric>\nENSG00000000003 -8.16314356729037 3.26416150242775e-16 1.36240609998527e-14\n```\n\n\n- Summary `summary()`\n\n```{r,echo=FALSE,eval=FALSE}\nsummary(d1r1)\n```\n\n```\nout of 17889 with nonzero total read count\nadjusted p-value < 0.1\nLFC > 0 (up)       : 4526, 25%\nLFC < 0 (down)     : 5062, 28%\noutliers [1]       : 25, 0.14%\nlow counts [2]     : 0, 0%\n(mean count < 3)\n```\n\n## DGE\n\n:::: {.columns}\n::: {.column}\n\n- MA plot `plotMA()`\n\n```{r,echo=FALSE,fig.height=2.5,fig.width=3,dev=\"svg\",eval=FALSE}\n{par(mar=c(4,4,0.2,0.2))\nplotMA(d1)}\n```\n\n![](assets/dge-ma.png)\n\n- Volcano plot\n\n```{r,echo=FALSE,fig.height=2.5,fig.width=3,dev=\"svg\",eval=FALSE}\npar(mar=c(4,4,0.2,0.2))\ntopT <- as.data.frame(d1r1)\n\n#Adjusted P values (FDR Q values)\nwith(topT, plot(log2FoldChange, -log10(padj), pch=20, cex=1.0, xlab=bquote(~Log[2]~fold~change), ylab=bquote(~-Log[10]~Q~value)))\n\nwith(subset(topT, padj<0.05 & abs(log2FoldChange)>2), points(log2FoldChange, -log10(padj), pch=20, col=\"red\", cex=0.5))\n\n#Add lines for absolute FC>2 and P-value cut-off at FDR Q<0.05\nabline(v=0, col=\"black\", lty=3, lwd=1.0)\nabline(v=-2, col=\"black\", lty=3, lwd=1.0)\nabline(v=2, col=\"black\", lty=3, lwd=1.0)\nabline(h=-log10(max(topT$pvalue[topT$padj<0.05], na.rm=TRUE)), col=\"black\", lty=3, lwd=1.0)\n```\n\n![](assets/dge-volcano.png)\n\n:::\n::: {.column}\n\n- Normalised counts `plotCounts()`\n\n```{r,echo=FALSE,fig.height=3,fig.width=3,dev=\"svg\",eval=FALSE}\npar(mar=c(4.5,4.5,1,0.2))\nplotCounts(d1,\"ENSG00000000003\",intgroup=\"type\")\n```\n\n![](assets/dge-counts.png)\n\n![](assets/scattered.gif){width=\"55%\"}\n\n:::\n::::\n\n## Functional analysis • GO\n\n- Gene set analysis (GSA)\n- Gene set enrichment analysis (GSEA)\n- Gene ontology / Reactome databases\n\n![](assets/go.jpg){width=\"50%\"}\n\n<img src=\"assets/systembio.png\" style=\"height:250px; position:fixed; right:0px; bottom:0px; margin-right: 70px; margin-bottom: 380px;\">\n\n## Functional analysis • Kegg\n\n- Pathway analysis (Kegg)\n\n![](assets/kegg.png){width=\"80%\"}\n\n[DAVID](https://david.ncifcrf.gov/), [clusterProfiler](https://bioconductor.org/packages/release/bioc/html/clusterProfiler.html), [ClueGO](http://apps.cytoscape.org/apps/cluego), [ErmineJ](https://erminej.msl.ubc.ca/), [pathview](https://bioconductor.org/packages/release/bioc/html/pathview.html)\n\n## Summary\n\n- Sound experimental design to avoid confounding\n- Plan carefully about lib prep, sequencing etc based on experimental objective\n- For DGE, biological replicates may be more important than other considerations (paired-end, sequencing depth, long reads etc)\n- Discard low quality bases, reads, genes and samples\n- Verify that tools and methods align with data assumptions\n- Experiment with multiple pipelines and tools\n- QC! QC everything at every step\n\n> [Conesa, A., Madrigal, P., Tarazona, S., Gomez-Cabrero, D., Cervera, A., McPherson, A., ... & Mortazavi, A. (2016). A survey of best practices for RNA-seq data analysis. [Genome biology, 17(1), 1-19.](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-016-0881-8)]{.large}  \n\n## Further learning\n\n- Griffith lab [RNA-Seq using HiSat & StringTie tutorial](https://github.com/griffithlab/rnaseq_tutorial/wiki)\n- HBC Training [DGE using DeSeq2 tutorial](https://github.com/hbctraining/Intro-to-R-with-DGE)\n- Hemberg lab [scRNA-Seq tutorial](http://hemberg-lab.github.io/scRNA.seq.course/index.html)\n- [RNA-Seq Blog](https://www.rna-seqblog.com/)\n- SciLifeLab [courses](https://www.scilifelab.se/education/courses%26training)\n\n<img src=\"assets/help.png\" style=\"height:250px; position:fixed; right:0px; bottom:0px; margin-right: 35px; margin-bottom: 40px;\">\n\n## {background-image=\"assets/end.jpg\"}\n### Thank you. Questions?\n\n## References\n\n::: {#refs}\n:::\n\n## Hands-On tutorial\n\n**Main exercise**\n\n- 01 Check the quality of the raw reads with **FastQC**\n- 02 Map the reads to the reference genome using **HISAT2**\n- 03 Assess the post-alignment quality using **QualiMap**\n- 04 Count the reads overlapping with genes using **featureCounts**\n- 05 Find differentially expressed genes using **DESeq2** in R\n\n**Bonus exercises**\n\n- 01 Functional annotation of DE genes using **GO/Reactome/Kegg** databases\n- 02 RNA-Seq figures and plots using **R**\n- 03 Visualisation of RNA-seq BAM files using **IGV** genome browser\n\n[**Data:** `/sw/courses/ngsintro/rnaseq/`]{.large}  \n[**Work:** ``r paste0(\"/proj/\",upid,\"/nobackup/user/rnaseq/\")``]{.large}\n\n## Hands-On tutorial\n\n:::: {.columns}\n::: {.column width=\"40%\"}\n\n- Course data directory\n\n`/sw/courses/ngsintro/rnaseq/`\n\n```\nrnaseq/\n+-- bonus/\n|   +-- assembly/\n|   +-- exon/\n|   +-- funannot/\n|   +-- plots/\n+-- documents/\n+-- main/\n    +-- 1_raw/\n    +-- 2_fastqc/\n    +-- 3_mapping/\n    +-- 4_qualimap/\n    +-- 5_dge/\n    +-- 6_multiqc/\n    +-- reference/\n    |   +-- mouse_chr19_hisat2/\n    +-- scripts/\n```\n\n:::\n::: {.column width=\"60%\"}\n\n- Your work directory\n\n``r paste0(\"/proj/\",upid,\"/nobackup/user/rnaseq/\")``\n\n```\n[user]/\nrnaseq/\n  +-- 1_raw/\n  +-- 2_fastqc/\n  +-- 3_mapping/\n  +-- 4_qualimap/\n  +-- 5_dge/\n  +-- 6_multiqc/\n  +-- reference/\n  |   +-- mouse_chr19_hisat2/\n  +-- scripts/\n  +-- funannot/\n  +-- plots/\n```\n\n:::\n::::\n\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"left","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","filters":["../../assets/custom.lua","reveal-header","lightbox"],"include-in-header":["../../assets/fonts/head.html"],"incremental":false,"output-file":"slide_rnaseq.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.3.433","auto-stretch":true,"bibliography":["../../references.bib"],"csl":"../../apa.csl","knitr":{"opts_chunk":{"results":"hold"}},"uppmax_project":"naiss2023-22-862","nsc_project":"naiss2023-22-862","uppmax_res_1":"naiss2023-22-862_1","uppmax_res_2":"naiss2023-22-862_2","uppmax_res_3":"naiss2023-22-862_3","uppmax_res_4":"naiss2023-22-862_4","uppmax_res_5":"naiss2023-22-862_5","location":"uppsala","assistants":["AJ: Anna Johansson","BV: Björn Viklund","DA: Dag Ahren","FB: Franziska Bonath","JH: Jason Hill","JB: Joakim Bygdell","JA: Juliana Assis","KL: Katarina Lejonlid","KB: Kristina Benevides","LK: Linda Köhn","LV: Louella Vasquez","MD: Martin Dahlö","MG: Maxime Garcia","ML: Malin Larsson","MM: Markus Mayrhofer","NN: Nina Norgren","OVP: Olga Vinnere Pettersson","PA: Prasoon Agarwal","PP: Paul Pyl","RF: Roy Francis","VVH: Vincent van Hoef","SD: Sebastian DiLorenzo"],"schedule_message":"Coffee breaks are planned for approximately 10:00 and 14:30 every day.","colors":{"primary":"#95b540","secondary":"#E9F2D1"},"packages":{"packages_cran_student":["BiocManager","remotes","dplyr","ggplot2","pheatmap","stringr","tidyr"],"packages_bioc_student":["DESeq2","edgeR","goseq","GO.db","org.Mm.eg.db","reactome.db"],"packages_github_student":null,"packages_cran_repo":["bookdown","captioner","here","htmlTable","knitr","leaflet","lubridate","markdown","pagedown","yaml"],"packages_bioc_repo":null,"packages_github_repo":null},"quarto-required":">=1.2.269","theme":["default","../../assets/css/custom.scss"],"width":1280,"height":720,"transition":"fade","transitionSpeed":"fast","smaller":false,"scrollable":false,"slideNumber":true,"progress":true,"date":"last-modified","date-format":"DD-MMM-YYYY","chalkboard":true,"callout-icon":false,"title-slide-attributes":{"data-background-image":"assets/images/cover.jpg","data-background-size":"cover","data-background-opacity":"1"},"header-logo-left":"../../assets/logos/nbis.png","header-logo-right":"../../assets/logos/scilifelab.png","title":"RNASeq Workflow","description":"Analysis of bulk RNA-Seq data to determine genome-wide gene expression","author":"Roy Francis / Dag Ahrén"}}},"projectFormats":["html","revealjs"]}