{"0xe4": "PMULHUW Qq Pq Multiply Packed Unsigned Integers and Store High Result", "0x3a": "ROUNDPS Wps Vps Round Packed Single-FP Values", "0xfa": "PSUBD Qq Pq Subtract Packed Integers", "0xda": "PMINUB Qq Pq Minimum of Packed Unsigned Byte Integers", "0xec": "PADDSB Qq Pq Add Packed Signed Integers with Signed Saturation", "0x28": "MOVAPS Wps Vps Move Aligned Packed Single-FP Values", "0x29": "MOVAPS Vps Wps Move Aligned Packed Single-FP Values", "0xf8": "PSUBB Qq Pq Subtract Packed Integers", "0xeb": "POR Qq Pq Bitwise Logical OR", "0x22": "MOV Rd Cd Move to/from Control Registers", "0x23": "MOV Rd Dd Move to/from Debug Registers", "0x20": "MOV Cd Rd Move to/from Control Registers", "0x21": "MOV Dd Rd Move to/from Debug Registers", "0x26": "MOV Rd Td Move to/from Test Registers", "0xea": "PMINSW Qq Pq Minimum of Packed Signed Word Integers", "0x24": "MOV Td Rd Move to/from Test Registers", "0xf1": "PSLLW Qq Pq Shift Packed Data Left Logical", "0xdb": "PAND Qd Pq Logical AND", "0xef": "PXOR Qq Pq Logical Exclusive OR", "0xe2": "PSRAD Qq Pq Shift Packed Data Right Arithmetic", "0xee": "PMAXSW Qq Pq Maximum of Packed Signed Word Integers", "0xed": "PADDSW Qq Pq Add Packed Signed Integers with Signed Saturation", "0xdc": "PADDUSB Qq Pq Add Packed Unsigned Integers with Unsigned Saturation", "0x35": "SYSEXIT IA32_SYSENTER_CS SS Fast Return from Fast System Call", "0x34": "SYSENTER IA32_SYSENTER_CS SS Fast System Call", "0x37": "GETSEC EAX  GETSEC Leaf Functions", "0x31": "RDTSC IA32_TIME_STAMP_COUNTER EAX Read Time-Stamp Counter", "0x30": "WRMSR rCX MSR Write to Model Specific Register", "0x33": "RDPMC PMC EAX Read Performance-Monitoring Counters", "0x32": "RDMSR rCX rAX Read from Model Specific Register", "0x38": "PSHUFB Qq Pq Packed Shuffle Bytes", "0xc0": "XADD  Eb Exchange and Add", "0xe1": "PSRAW Qq Pq Shift Packed Data Right Arithmetic", "0xfe": "PADDD Qq Pq Add Packed Integers", "0x88": "JS Jvds  Jump short if sign (SF=1)", "0xdd": "PADDUSW Qq Pq Add Packed Unsigned Integers with Unsigned Saturation", "0x89": "JNS Jvds  Jump short if not sign (SF=0)", "0x2b": "MOVNTPS Vps Mps Store Packed Single-FP Values Using Non-Temporal Hint", "0x2c": "CVTTPS2PI Wpsq Ppi Convert with Trunc. Packed Single-FP Values to1.11 PackedDW Integers", "0xfd": "PADDW Qq Pq Add Packed Integers", "0x2a": "CVTPI2PS Qpi Vps Convert Packed DW Integers to1.11 PackedSingle-FP Values", "0x2f": "COMISS Vss  Compare Scalar Ordered Single-FP Values and Set EFLAGS", "0xfc": "PADDB Qq Pq Add Packed Integers", "0x2d": "CVTPS2PI Wpsq Ppi Convert Packed Single-FP Values to1.11 PackedDW Integers", "0x2e": "UCOMISS Vss  Unordered Compare Scalar Single-FP Values and Set EFLAGS", "0x5c": "SUBPS Wps Vps Subtract Packed Single-FP Values", "0x5b": "CVTDQ2PS Wdq Vps Convert Packed DW Integers to1.11 PackedSingle-FP Values", "0x5a": "CVTPS2PD Wps Vpd Convert Packed Single-FP Values to1.11 PackedDouble-FP Values", "0xba": "BT Evqp  Bit Test", "0x5f": "MAXPS Wps Vps Return Maximum Packed Single-FP Values", "0x5e": "DIVPS Wps Vps Divide Packed Single-FP Values", "0x5d": "MINPS Wps Vps Return Minimum Packed Single-FP Values", "0x40": "CMOVO Evqp Gvqp Conditional Move - overflow (OF=1)", "0x41": "CMOVNO Evqp Gvqp Conditional Move - not overflow (OF=0)", "0x42": "CMOVB Evqp Gvqp Conditional Move - below/not above or equal/carry (CF=1)", "0x43": "CMOVNB Evqp Gvqp Conditional Move - not below/above or equal/not carry (CF=0)", "0x44": "CMOVZ Evqp Gvqp Conditional Move - zero/equal (ZF=0)", "0x45": "CMOVNZ Evqp Gvqp Conditional Move - not zero/not equal (ZF=1)", "0x46": "CMOVBE Evqp Gvqp Conditional Move - below or equal/not above (CF=1 AND ZF=1)", "0x47": "CMOVNBE Evqp Gvqp Conditional Move - not below or equal/above (CF=0 AND ZF=0)", "0x48": "CMOVS Evqp Gvqp Conditional Move - sign (SF=1)", "0x49": "CMOVNS Evqp Gvqp Conditional Move - not sign (SF=0)", "0xaf": "IMUL Evqp Gvqp Signed Multiply", "0xae": "FXSAVE ST Mstx Save x87 FPU, MMX, XMM, and MXCSR State", "0xad": "SHRD Gvqp Evqp Double Precision Shift Right", "0xac": "SHRD Gvqp Evqp Double Precision Shift Right", "0xab": "BTS Gvqp Evqp Bit Test and Set", "0xaa": "RSM  Flags Resume from System Management Mode", "0xe6": "CVTPD2DQ Wpd Vdq Convert Packed Double-FP Values to1.11 PackedDW Integers", "0x4a": "CMOVP Evqp Gvqp Conditional Move - parity/parity even (PF=1)", "0x4b": "CMOVNP Evqp Gvqp Conditional Move - not parity/parity odd", "0x4c": "CMOVL Evqp Gvqp Conditional Move - less/not greater (SF!=OF)", "0x4d": "CMOVNL Evqp Gvqp Conditional Move - not less/greater or equal (SF=OF)", "0x4e": "CMOVLE Evqp Gvqp Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))", "0x4f": "CMOVNLE Evqp Gvqp Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))", "0x53": "RCPPS Wps Vps Compute Reciprocals of Packed Single-FP Values", "0x52": "RSQRTPS Wps Vps Compute Recipr. of Square Roots of Packed Single-FP Values", "0x51": "SQRTPS Wps Vps Compute Square Roots of Packed Single-FP Values", "0x50": "MOVMSKPS Ups Gdqp Extract Packed Single-FP Sign Mask", "0x57": "XORPS Wps Vps Bitwise Logical XOR for Single-FP Values", "0x56": "ORPS Wps Vps Bitwise Logical OR of Single-FP Values", "0x55": "ANDNPS Wps Vps Bitwise Logical AND NOT of Packed Single-FP Values", "0x54": "ANDPS Wps Vps Bitwise Logical AND of Packed Single-FP Values", "0xe5": "PMULHW Qq Pq Multiply Packed Signed Integers and Store High Result", "0x59": "MULPS Wps Vps Multiply Packed Single-FP Values", "0x58": "ADDPS Wps Vps Add Packed Single-FP Values", "0xf4": "PMULUDQ Qq Pq Multiply Packed Unsigned DW Integers", "0xfb": "PSUBQ Qq Pq Subtract Packed Quadword Integers", "0xf9": "PSUBW Qq Pq Subtract Packed Integers", "0xf6": "PSADBW Qq Pq Compute Sum of Absolute Differences", "0xa9": "POP SS:[rSP] GS Pop a Value from the Stack", "0xa8": "PUSH GS SS:[rSP] Push Word, Doubleword or Quadword Onto the Stack", "0xa5": "SHLD Gvqp Evqp Double Precision Shift Left", "0xa4": "SHLD Gvqp Evqp Double Precision Shift Left", "0xa3": "BT Evqp  Bit Test", "0xa2": "CPUID  IA32_BIOS_SIGN_ID CPU Identification", "0xa1": "POP SS:[rSP] FS Pop a Value from the Stack", "0xa0": "PUSH FS SS:[rSP] Push Word, Doubleword or Quadword Onto the Stack", "0xf5": "PMADDWD Qd Pq Multiply and Add Packed Integers", "0xf2": "PSLLD Qq Pq Shift Packed Data Left Logical", "0x7c": "HADDPD Wpd Vpd Packed Double-FP Horizontal Add", "0xd4": "PADDQ Qq Pq Add Packed Quadword Integers", "0x7e": "MOVD Pq Ed Move Doubleword", "0x7d": "HSUBPD Wpd Vpd Packed Double-FP Horizontal Subtract", "0x7f": "MOVQ Pq Qq Move Quadword", "0xf0": "LDDQU Mdq Vdq Load Unaligned Integer 128 Bits", "0x68": "PUNPCKHBW Qq Pq Unpack High Data", "0x69": "PUNPCKHWD Qq Pq Unpack High Data", "0x66": "PCMPGTD Qd Pq Compare Packed Signed Integers for Greater Than", "0x67": "PACKUSWB Qq Pq Pack with Unsigned Saturation", "0x64": "PCMPGTB Qd Pq Compare Packed Signed Integers for Greater Than", "0x65": "PCMPGTW Qd Pq Compare Packed Signed Integers for Greater Than", "0x62": "PUNPCKLDQ Qd Pq Unpack Low Data", "0x63": "PACKSSWB Qd Pq Pack with Signed Saturation", "0x60": "PUNPCKLBW Qd Pq Unpack Low Data", "0x61": "PUNPCKLWD Qd Pq Unpack Low Data", "0x99": "SETNS  Eb Set Byte on Condition - not sign (SF=0)", "0xd5": "PMULLW Qq Pq Multiply Packed Signed Integers and Store Low Result", "0xf3": "PSLLQ Qq Pq Shift Packed Data Left Logical", "0xb8": "JMPE   Jump to IA-64 Instruction Set", "0xb9": "UD G  Undefined Instruction", "0xb2": "LSS Mptp SS Load Far Pointer", "0xb3": "BTR Gvqp Evqp Bit Test and Reset", "0xb0": "CMPXCHG Gb Eb Compare and Exchange", "0xb1": "CMPXCHG Gvqp Evqp Compare and Exchange", "0xb6": "MOVZX Eb Gvqp Move with Zero-Extend", "0xb7": "MOVZX Ew Gvqp Move with Zero-Extend", "0xb4": "LFS Mptp FS Load Far Pointer", "0xb5": "LGS Mptp GS Load Far Pointer", "0xe3": "PAVGW Qq Pq Average Packed Integers", "0xd6": "MOVQ Vq Wq Move Quadword", "0x6f": "MOVQ Qq Pq Move Quadword", "0x6d": "PUNPCKHQDQ Wdq Vdq Unpack High Data", "0x6e": "MOVD Ed Pq Move Doubleword", "0x6b": "PACKSSDW Qq Pq Pack with Signed Saturation", "0x6c": "PUNPCKLQDQ Wdq Vdq Unpack Low Data", "0x6a": "PUNPCKHDQ Qq Pq Unpack High Data", "0x79": "VMWRITE Gd  Write Field to Virtual-Machine Control Structure", "0x78": "VMREAD Gd Ed Read Field from Virtual-Machine Control Structure", "0x71": "PSRLW Ib Nq Shift Packed Data Right Logical", "0x70": "PSHUFW Qq Pq Shuffle Packed Words", "0x73": "PSRLQ Ib Nq Shift Packed Data Right Logical", "0x72": "PSRLD Ib Nq Shift Double Quadword Right Logical", "0x75": "PCMPEQW Qq Pq Compare Packed Data for Equal", "0x74": "PCMPEQB Qq Pq Compare Packed Data for Equal", "0x77": "EMMS   Empty MMX Technology State", "0x76": "PCMPEQD Qq Pq Compare Packed Data for Equal", "0xc5": "PEXTRW Nq Gdqp Extract Word", "0xc4": "PINSRW Rdqp Pq Insert Word", "0xc7": "CMPXCHG8B EBX Mq Compare and Exchange Bytes", "0xc6": "SHUFPS Wps Vps Shuffle Packed Single-FP Values", "0xc1": "XADD  Evqp Exchange and Add", "0x8b": "JNP Jvds  Jump short if not parity/parity odd", "0xc3": "MOVNTI Gdqp Mdqp Store Doubleword Using Non-Temporal Hint", "0xc2": "CMPPS Wps Vps Compare Packed Single-FP Values", "0xbb": "BTC Gvqp Evqp Bit Test and Complement", "0xbc": "BSF Evqp Gvqp Bit Scan Forward", "0x8c": "JL Jvds  Jump short if less/not greater (SF!=OF)", "0xbf": "MOVSX Ew Gvqp Move with Sign-Extension", "0xc8": "BSWAP  Zvqp Byte Swap", "0xbd": "BSR Evqp Gvqp Bit Scan Reverse", "0xbe": "MOVSX Eb Gvqp Move with Sign-Extension", "0xe9": "PSUBSW Qq Pq Subtract Packed Signed Integers with Signed Saturation", "0xe8": "PSUBSB Qq Pq Subtract Packed Signed Integers with Signed Saturation", "0xd9": "PSUBUSW Qq Pq Subtract Packed Unsigned Integers with Unsigned Saturation", "0xf7": "MASKMOVQ Nq (DS:)[rDI] Store Selected Bytes of Quadword", "0xd0": "ADDSUBPD Wpd Vpd Packed Double-FP Add/Subtract", "0x9f": "SETNLE  Eb Set Byte on Condition - not less nor equal/greater ((ZF=0) AND (SF=OF))", "0x9e": "SETLE  Eb Set Byte on Condition - less or equal/not greater ((ZF=1) OR (SF!=OF))", "0x9d": "SETNL  Eb Set Byte on Condition - not less/greater or equal (SF=OF)", "0x08": "INVD   Invalidate Internal Caches", "0x09": "WBINVD   Write Back and Invalidate Cache", "0x9a": "SETP  Eb Set Byte on Condition - parity/parity even (PF=1)", "0xd7": "PMOVMSKB Nq Gdqp Move Byte Mask", "0xd8": "PSUBUSB Qq Pq Subtract Packed Unsigned Integers with Unsigned Saturation", "0x05": "LOADALL  AX Load All of the CPU Registers", "0x06": "CLTS  CR0 Clear Task-Switched Flag in CR0", "0x07": "LOADALL  EAX Load All of the CPU Registers", "0x00": "SLDT LDTR Mw Store Local Descriptor Table Register", "0x01": "SGDT GDTR Ms Store Global Descriptor Table Register", "0x02": "LAR Mw Gvqp Load Access Rights Byte", "0x03": "LSL Mw Gvqp Load Segment Limit", "0x84": "JZ Jvds  Jump short if zero/equal (ZF=0)", "0x85": "JNZ Jvds  Jump short if not zero/not equal (ZF=1)", "0x86": "JBE Jvds  Jump short if below or equal/not above (CF=1 AND ZF=1)", "0x87": "JNBE Jvds  Jump short if not below or equal/above (CF=0 AND ZF=0)", "0x80": "JO Jvds  Jump short if overflow (OF=1)", "0x81": "JNO Jvds  Jump short if not overflow (OF=0)", "0x82": "JB Jvds  Jump short if below/not above or equal/carry (CF=1)", "0x83": "JNB Jvds  Jump short if not below/above or equal/not carry (CF=0)", "0x1f": "HINT_NOP Ev  Hintable NOP", "0x1e": "HINT_NOP Ev  Hintable NOP", "0x1d": "HINT_NOP Ev  Hintable NOP", "0x1c": "HINT_NOP Ev  Hintable NOP", "0x1b": "HINT_NOP Ev  Hintable NOP", "0x1a": "HINT_NOP Ev  Hintable NOP", "0xde": "PMAXUB Qq Pq Maximum of Packed Unsigned Byte Integers", "0xdf": "PANDN Qq Pq Logical AND NOT", "0xd1": "PSRLW Qq Pq Shift Packed Data Right Logical", "0xd2": "PSRLD Qq Pq Shift Packed Data Right Logical", "0xd3": "PSRLQ Qq Pq Shift Packed Data Right Logical", "0x9c": "SETL  Eb Set Byte on Condition - less/not greater (SF!=OF)", "0x9b": "SETNP  Eb Set Byte on Condition - not parity/parity odd", "0x8d": "JNL Jvds  Jump short if not less/greater or equal (SF=OF)", "0x8e": "JLE Jvds  Jump short if less or equal/not greater ((ZF=1) OR (SF!=OF))", "0x8f": "JNLE Jvds  Jump short if not less nor equal/greater ((ZF=0) AND (SF=OF))", "0xe0": "PAVGB Qq Pq Average Packed Integers", "0xe7": "MOVNTQ Pq Mq Store of Quadword Using Non-Temporal Hint", "0x8a": "JP Jvds  Jump short if parity/parity even (PF=1)", "0x19": "HINT_NOP Ev  Hintable NOP", "0x18": "HINT_NOP Ev  Hintable NOP", "0x17": "MOVHPS Vq Mq Move High Packed Single-FP Values", "0x16": "MOVLHPS Uq Vq Move Packed Single-FP Values Low to High", "0x15": "UNPCKHPS Wq Vps Unpack and Interleave High Packed Single-FP Values", "0x14": "UNPCKLPS Wq Vps Unpack and Interleave Low Packed Single-FP Values", "0x13": "MOVLPS Vq Mq Move Low Packed Single-FP Values", "0x12": "MOVHLPS Uq Vq Move Packed Single-FP Values High to Low", "0x11": "MOVUPS Vps Wps Move Unaligned Packed Single-FP Values", "0x10": "MOVUPS Wps Vps Move Unaligned Packed Single-FP Values", "0x97": "SETNBE  Eb Set Byte on Condition - not below or equal/above (CF=0 AND ZF=0)", "0x96": "SETBE  Eb Set Byte on Condition - below or equal/not above (CF=1 AND ZF=1)", "0x95": "SETNZ  Eb Set Byte on Condition - not zero/not equal (ZF=1)", "0x94": "SETZ  Eb Set Byte on Condition - zero/equal (ZF=0)", "0x93": "SETNB  Eb Set Byte on Condition - not below/above or equal/not carry (CF=0)", "0x92": "SETB  Eb Set Byte on Condition - below/not above or equal/carry (CF=1)", "0x91": "SETNO  Eb Set Byte on Condition - not overflow (OF=0)", "0x90": "SETO  Eb Set Byte on Condition - overflow (OF=1)", "0x0d": "NOP Ev  No Operation", "0x0b": "UD2   Undefined Instruction", "0x98": "SETS  Eb Set Byte on Condition - sign (SF=1)"}